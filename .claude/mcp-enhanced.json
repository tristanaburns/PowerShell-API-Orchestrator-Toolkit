{
  "inheritGlobalMcpSettings": false,
  "overrideGlobal": true,
  "mergeWithGlobal": false,
  "enableAll": true,
  "autoStart": true,
  "autoRestart": true,
  "enableHealthChecks": true,
  "enableMetrics": true,
  "enableLogging": true,
  "maxConcurrentConnections": 200,
  "connectionTimeout": 60000,
  "retryAttempts": 5,
  "retryDelay": 2000,
  "enableLoadBalancing": true,
  "enableFailover": true,
  "sonnet4Optimizations": {
    "extendedThinkingTimeout": 120000,
    "ultraThinkingMode": true,
    "advancedReasoningSupport": true,
    "largeContextHandling": true,
    "prioritizeThinkingServers": true,
    "intelligentResourceAllocation": true,
    "adaptiveTimeout": true
  },
  "mcpServers": {
    "zen": {
      "command": "node",
      "args": [
        "./mcp-servers/zen/index.js"
      ],
      "transport": "stdio",
      "description": "Zen MCP server for enhanced development workflows - Sonnet 4 optimized",
      "enabled": true,
      "priority": 1,
      "sonnet4Enhanced": true,
      "timeout": 45000,
      "maxRetries": 4
    },
    "claude-swarm": {
      "command": "node",
      "args": [
        "./mcp-servers/claude-swarm/index.js"
      ],
      "transport": "stdio",
      "description": "Claude swarm coordination and multi-agent orchestration - Sonnet 4 enhanced",
      "enabled": true,
      "priority": 2,
      "sonnet4Enhanced": true,
      "ultraThinkingSupport": true,
      "timeout": 60000,
      "maxRetries": 5
    },
    "ccusage": {
      "command": "node",
      "args": [
        "./mcp-servers/ccusage/index.js"
      ],
      "transport": "stdio",
      "description": "Claude Code usage tracking and analytics",
      "enabled": true,
      "priority": 3
    },
    "claude-code-proxy": {
      "command": "node",
      "args": [
        "./mcp-servers/claude-code-proxy/index.js"
      ],
      "transport": "stdio",
      "description": "Claude Code proxy server for enhanced development workflows",
      "enabled": true,
      "priority": 4
    },
    "claude-code-flow": {
      "command": "node",
      "args": [
        "./mcp-servers/claude-code-flow/index.js"
      ],
      "transport": "stdio",
      "description": "Claude Code workflow automation and orchestration",
      "enabled": true,
      "priority": 5
    },
    "claude-code-requirements-builder": {
      "command": "node",
      "args": [
        "./mcp-servers/claude-code-requirements-builder/index.js"
      ],
      "transport": "stdio",
      "description": "Claude Code requirements analysis and documentation builder - Sonnet 4 enhanced",
      "enabled": true,
      "priority": 6,
      "sonnet4Enhanced": true,
      "advancedReasoningOptimized": true,
      "timeout": 50000,
      "maxRetries": 4
    },
    "agent-rules": {
      "command": "node",
      "args": [
        "./mcp-servers/agent-rules/index.js"
      ],
      "transport": "stdio",
      "description": "Agent rules and guidelines for AI development workflows",
      "enabled": true,
      "priority": 7
    },
    "dotai": {
      "command": "node",
      "args": [
        "./mcp-servers/dotai/index.js"
      ],
      "transport": "stdio",
      "description": "DotAI - AI-powered development tools and utilities",
      "enabled": true,
      "priority": 8
    },
    "claudebox": {
      "command": "node",
      "args": [
        "./mcp-servers/claudebox/index.js"
      ],
      "transport": "stdio",
      "description": "Claudebox - Sandbox environment for Claude Code development",
      "enabled": true,
      "priority": 9
    },
    "claudia": {
      "command": "node",
      "args": [
        "./mcp-servers/claudia/index.js"
      ],
      "transport": "stdio",
      "description": "Claudia - Advanced Claude Code assistant and automation framework - Sonnet 4 optimized",
      "enabled": true,
      "priority": 10,
      "sonnet4Enhanced": true,
      "ultraThinkingSupport": true,
      "extendedContextSupport": true,
      "timeout": 75000,
      "maxRetries": 5
    },
    "task-orchestrator": {
      "command": "npx",
      "args": [
        "-y",
        "@echoingvesper/mcp-task-orchestrator"
      ],
      "transport": "stdio",
      "description": "AI-powered task orchestration and workflow automation with specialized agent roles - Sonnet 4 enhanced",
      "enabled": true,
      "priority": 11,
      "category": "workflow-automation",
      "sonnet4Enhanced": true,
      "ultraThinkingSupport": true,
      "advancedReasoningOptimized": true,
      "timeout": 90000,
      "maxRetries": 5,
      "env": {
        "TASK_ORCHESTRATOR_MAX_CONCURRENT": "20",
        "TASK_ORCHESTRATOR_SONNET4_MODE": "true"
      }
    },
    "sequential-thinking": {
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-sequentialthinking"
      ],
      "transport": "stdio",
      "description": "Dynamic and reflective problem-solving through thought sequences - Sonnet 4 optimized",
      "enabled": true,
      "priority": 12,
      "category": "reasoning-enhancement",
      "sonnet4Enhanced": true,
      "ultraThinkingSupport": true,
      "extendedContextSupport": true,
      "timeout": 120000,
      "maxRetries": 3,
      "env": {
        "SEQUENTIAL_THINKING_MAX_THOUGHTS": "50",
        "SEQUENTIAL_THINKING_SONNET4_MODE": "true"
      }
    },
    "memory": {
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-memory"
      ],
      "transport": "stdio",
      "description": "Knowledge graph-based persistent memory system for context retention - Sonnet 4 enhanced",
      "enabled": true,
      "priority": 13,
      "category": "knowledge-management",
      "sonnet4Enhanced": true,
      "persistentMemory": true,
      "timeout": 60000,
      "maxRetries": 4,
      "env": {
        "MEMORY_STORAGE_PATH": "./mcp-data/memory",
        "MEMORY_MAX_ENTITIES": "10000",
        "MEMORY_SONNET4_OPTIMIZED": "true"
      }
    },
    "browserbase": {
      "command": "npx",
      "args": [
        "-y",
        "@browserbase/mcp-server-browserbase"
      ],
      "transport": "stdio",
      "description": "Cloud browser automation for testing, scraping, and web interaction - Sonnet 4 enhanced",
      "enabled": true,
      "priority": 14,
      "category": "browser-automation",
      "sonnet4Enhanced": true,
      "timeout": 120000,
      "maxRetries": 3,
      "env": {
        "BROWSERBASE_API_KEY": "${BROWSERBASE_API_KEY}",
        "BROWSERBASE_PROJECT_ID": "${BROWSERBASE_PROJECT_ID}",
        "BROWSERBASE_SONNET4_MODE": "true"
      }
    },
    "e2b": {
      "command": "npx",
      "args": [
        "-y",
        "@e2b/mcp-server"
      ],
      "transport": "stdio",
      "description": "Secure sandboxed code execution environment - Sonnet 4 optimized",
      "enabled": true,
      "priority": 15,
      "category": "code-execution",
      "sonnet4Enhanced": true,
      "secureExecution": true,
      "timeout": 90000,
      "maxRetries": 4,
      "env": {
        "E2B_API_KEY": "${E2B_API_KEY}",
        "E2B_SONNET4_OPTIMIZED": "true"
      }
    },
    "github-official": {
      "command": "npx",
      "args": [
        "-y",
        "@github/github-mcp-server"
      ],
      "transport": "stdio",
      "description": "GitHub's official MCP Server for enhanced repository management - Sonnet 4 optimized",
      "enabled": true,
      "priority": 16,
      "category": "development-tools",
      "sonnet4Enhanced": true,
      "timeout": 60000,
      "maxRetries": 4,
      "env": {
        "GITHUB_PERSONAL_ACCESS_TOKEN": "${GITHUB_TOKEN}",
        "GITHUB_SONNET4_MODE": "true"
      }
    },
    "playwright": {
      "command": "npx",
      "args": [
        "-y",
        "@microsoft/playwright-mcp"
      ],
      "transport": "stdio",
      "description": "Microsoft Playwright for professional browser automation - Sonnet 4 enhanced",
      "enabled": true,
      "priority": 17,
      "category": "browser-automation",
      "sonnet4Enhanced": true,
      "timeout": 120000,
      "maxRetries": 3,
      "env": {
        "PLAYWRIGHT_SONNET4_OPTIMIZED": "true"
      }
    },
    "stripe": {
      "command": "npx",
      "args": [
        "-y",
        "@stripe/agent-toolkit"
      ],
      "transport": "stdio",
      "description": "Stripe payment processing integration - Sonnet 4 optimized",
      "enabled": true,
      "priority": 18,
      "category": "integrations",
      "sonnet4Enhanced": true,
      "timeout": 60000,
      "maxRetries": 4,
      "env": {
        "STRIPE_SECRET_KEY": "${STRIPE_SECRET_KEY}",
        "STRIPE_SONNET4_MODE": "true"
      }
    },
    "supabase": {
      "command": "npx",
      "args": [
        "-y",
        "@supabase-community/supabase-mcp"
      ],
      "transport": "stdio",
      "description": "Supabase backend-as-a-service integration - Sonnet 4 enhanced",
      "enabled": true,
      "priority": 19,
      "category": "backend-services",
      "sonnet4Enhanced": true,
      "timeout": 60000,
      "maxRetries": 4,
      "env": {
        "SUPABASE_URL": "${SUPABASE_URL}",
        "SUPABASE_ANON_KEY": "${SUPABASE_ANON_KEY}",
        "SUPABASE_SONNET4_OPTIMIZED": "true"
      }
    },
    "convex": {
      "command": "npx",
      "args": [
        "-y",
        "@convex-dev/mcp-server"
      ],
      "transport": "stdio",
      "description": "Convex real-time database and backend platform - Sonnet 4 enhanced",
      "enabled": true,
      "priority": 20,
      "category": "backend-services",
      "sonnet4Enhanced": true,
      "timeout": 60000,
      "maxRetries": 4,
      "env": {
        "CONVEX_URL": "${CONVEX_URL}",
        "CONVEX_SONNET4_MODE": "true"
      }
    },
    "chroma": {
      "command": "npx",
      "args": [
        "-y",
        "@chroma-core/chroma-mcp"
      ],
      "transport": "stdio",
      "description": "Vector search, embeddings, and AI application database - Sonnet 4 enhanced",
      "enabled": true,
      "priority": 21,
      "category": "data-analytics",
      "sonnet4Enhanced": true,
      "vectorSearch": true,
      "timeout": 75000,
      "maxRetries": 4,
      "env": {
        "CHROMA_HOST": "${CHROMA_HOST:-localhost}",
        "CHROMA_PORT": "${CHROMA_PORT:-8000}",
        "CHROMA_SONNET4_OPTIMIZED": "true"
      }
    },
    "motherduck": {
      "command": "npx",
      "args": [
        "-y",
        "@motherduckdb/mcp-server-motherduck"
      ],
      "transport": "stdio",
      "description": "MotherDuck advanced data analytics and DuckDB integration - Sonnet 4 enhanced",
      "enabled": true,
      "priority": 22,
      "category": "data-analytics",
      "sonnet4Enhanced": true,
      "analyticsOptimized": true,
      "timeout": 90000,
      "maxRetries": 4,
      "env": {
        "MOTHERDUCK_TOKEN": "${MOTHERDUCK_TOKEN}",
        "MOTHERDUCK_SONNET4_MODE": "true"
      }
    },
    "axiom": {
      "command": "npx",
      "args": [
        "-y",
        "@axiomhq/mcp-server-axiom"
      ],
      "transport": "stdio",
      "description": "Axiom log analysis and observability platform - Sonnet 4 enhanced",
      "enabled": true,
      "priority": 23,
      "category": "observability",
      "sonnet4Enhanced": true,
      "timeout": 60000,
      "maxRetries": 4,
      "env": {
        "AXIOM_TOKEN": "${AXIOM_TOKEN}",
        "AXIOM_ORG_ID": "${AXIOM_ORG_ID}",
        "AXIOM_SONNET4_OPTIMIZED": "true"
      }
    },
    "grafana": {
      "command": "npx",
      "args": [
        "-y",
        "@grafana/mcp-grafana"
      ],
      "transport": "stdio",
      "description": "Grafana monitoring, dashboards, and data visualization - Sonnet 4 enhanced",
      "enabled": true,
      "priority": 24,
      "category": "observability",
      "sonnet4Enhanced": true,
      "timeout": 60000,
      "maxRetries": 4,
      "env": {
        "GRAFANA_URL": "${GRAFANA_URL}",
        "GRAFANA_API_KEY": "${GRAFANA_API_KEY}",
        "GRAFANA_SONNET4_MODE": "true"
      }
    },
    "notion-official": {
      "command": "npx",
      "args": [
        "-y",
        "@makenotion/notion-mcp-server"
      ],
      "transport": "stdio",
      "description": "Notion official MCP server for enhanced documentation and project management - Sonnet 4 optimized",
      "enabled": true,
      "priority": 25,
      "category": "project-management",
      "sonnet4Enhanced": true,
      "timeout": 60000,
      "maxRetries": 4,
      "env": {
        "NOTION_API_KEY": "${NOTION_API_KEY}",
        "NOTION_SONNET4_OPTIMIZED": "true"
      }
    },
    "linear": {
      "command": "npx",
      "args": [
        "-y",
        "@tacticlaunch/mcp-linear"
      ],
      "transport": "stdio",
      "description": "Linear project management integration - Sonnet 4 enhanced",
      "enabled": true,
      "priority": 26,
      "category": "project-management",
      "sonnet4Enhanced": true,
      "timeout": 60000,
      "maxRetries": 4,
      "env": {
        "LINEAR_API_KEY": "${LINEAR_API_KEY}",
        "LINEAR_SONNET4_MODE": "true"
      }
    },
    "make": {
      "command": "npx",
      "args": [
        "-y",
        "@integromat/make-mcp-server"
      ],
      "transport": "stdio",
      "description": "Make workflow automation scenarios - Sonnet 4 enhanced",
      "enabled": true,
      "priority": 27,
      "category": "workflow-automation",
      "sonnet4Enhanced": true,
      "timeout": 75000,
      "maxRetries": 4,
      "env": {
        "MAKE_API_KEY": "${MAKE_API_KEY}",
        "MAKE_SONNET4_OPTIMIZED": "true"
      }
    },
    "zapier": {
      "command": "npx",
      "args": [
        "-y",
        "@zapier/zapier-mcp"
      ],
      "transport": "stdio",
      "description": "Zapier integration for 8,000+ apps - Sonnet 4 enhanced",
      "enabled": true,
      "priority": 28,
      "category": "integrations",
      "sonnet4Enhanced": true,
      "massiveIntegration": true,
      "timeout": 90000,
      "maxRetries": 5,
      "env": {
        "ZAPIER_API_KEY": "${ZAPIER_API_KEY}",
        "ZAPIER_SONNET4_MODE": "true"
      }
    },
    "context7": {
      "command": "npx",
      "args": [
        "-y",
        "@upstash/context7-mcp"
      ],
      "transport": "stdio",
      "description": "Context7 MCP - Up-to-date documentation for any library or framework - Sonnet 4 enhanced",
      "enabled": true,
      "priority": 29,
      "category": "development-tools",
      "sonnet4Enhanced": true,
      "documentationAccess": true,
      "timeout": 60000,
      "maxRetries": 4,
      "env": {
        "CONTEXT7_SONNET4_OPTIMIZED": "true",
        "CONTEXT7_MAX_TOKENS": "20000"
      }
    }
  },
  "serverManagement": {
    "autoStart": true,
    "autoRestart": true,
    "healthChecks": true,
    "loadBalancing": true,
    "failover": true,
    "respectGlobalSettings": false,
    "maxConcurrentConnections": 100,
    "connectionTimeout": 60000,
    "retryAttempts": 5,
    "retryDelay": 2000,
    "sonnet4Optimizations": {
      "extendedThinkingTimeout": 120000,
      "ultraThinkingModeEnabled": true,
      "advancedReasoningSupport": true,
      "largeContextOptimizations": true,
      "priorityQueueing": true,
      "intelligentRetries": true,
      "adaptiveResourceAllocation": true,
      "smartLoadBalancing": true
    },
    "categories": {
      "workflow-automation": {
        "priority": "high",
        "maxConcurrent": 15
      },
      "reasoning-enhancement": {
        "priority": "critical",
        "maxConcurrent": 10
      },
      "knowledge-management": {
        "priority": "high",
        "maxConcurrent": 8
      },
      "browser-automation": {
        "priority": "medium",
        "maxConcurrent": 5
      },
      "code-execution": {
        "priority": "high",
        "maxConcurrent": 10
      },
      "development-tools": {
        "priority": "high",
        "maxConcurrent": 12
      },
      "integrations": {
        "priority": "medium",
        "maxConcurrent": 8
      },
      "backend-services": {
        "priority": "medium",
        "maxConcurrent": 6
      },
      "data-analytics": {
        "priority": "medium",
        "maxConcurrent": 8
      },
      "observability": {
        "priority": "low",
        "maxConcurrent": 5
      },
      "project-management": {
        "priority": "medium",
        "maxConcurrent": 6
      }
    }
  },
  "environmentVariables": {
    "required": [
      "GITHUB_TOKEN",
      "BROWSERBASE_API_KEY",
      "E2B_API_KEY"
    ],
    "optional": [
      "STRIPE_SECRET_KEY",
      "SUPABASE_URL",
      "SUPABASE_ANON_KEY",
      "CONVEX_URL",
      "CHROMA_HOST",
      "MOTHERDUCK_TOKEN",
      "AXIOM_TOKEN",
      "GRAFANA_API_KEY",
      "NOTION_API_KEY",
      "LINEAR_API_KEY",
      "MAKE_API_KEY",
      "ZAPIER_API_KEY",
      "CONTEXT7_MAX_TOKENS"
    ]
  }
}